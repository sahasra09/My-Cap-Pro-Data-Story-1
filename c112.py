# -*- coding: utf-8 -*-
"""C112.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aLko76Y2Wjx1LyYlWh_sOJJul_58G_b5

**Data Story-1**
"""

from google.colab import files
data_to_load=files.upload()

import pandas as pd
import statistics
import plotly.express as px

df=pd.read_csv('savings_data_final.csv')
fig=px.scatter(df,y='quant_saved',color='rem_any')
fig.show()

import csv
import plotly.graph_objects as go

with open('savings_data_final.csv',newline='') as f:
  reader=csv.reader(f)
  savings_data=list(reader)
savings_data.pop(0)
total_entries=len(savings_data)
people_given_reminder=0
for data in savings_data:
  if int(data[3])==1:
    people_given_reminder+=1

fig=go.Figure(go.Bar(x=['reminded','not reminded'],y=[people_given_reminder,(total_entries-people_given_reminder)]))
fig.show()

all_savings=[]
for data in savings_data:
  all_savings.append(float(data[0]))

print(f'Mean of savings: {statistics.mean(all_savings)}')
print(f'Median of savings: {statistics.median(all_savings)}')
print(f'Mode of savings: {statistics.mode(all_savings)}')

reminded_savings=[]
not_reminded_savings=[]

for data in savings_data:
  if int(data[3])==1:
    reminded_savings.append(float(data[0]))
  else:
    not_reminded_savings.append(float(data[0]))

print('Results for people who were reminded: ')
print(f'Mean of savings: {statistics.mean(reminded_savings)}')
print(f'Median of savings: {statistics.median(reminded_savings)}')
print(f'Mode of savings: {statistics.mode(reminded_savings)}')

print('\n')
print('Results for people who were not reminded: ')
print(f'Mean of savings: {statistics.mean(not_reminded_savings)}')
print(f'Median of savings: {statistics.median(not_reminded_savings)}')
print(f'Mode of savings: {statistics.mode(not_reminded_savings)}')

print(f'standard deviation of all data: {statistics.stdev(all_savings)}')
print(f'standard deviation of people who were reminded: {statistics.stdev(reminded_savings)}')
print(f'standard deviation of people who were not reminded: {statistics.stdev(not_reminded_savings)}')

import plotly.figure_factory as ff

fig=ff.create_distplot([df['quant_saved'].tolist()],['Savings'],show_hist=False)
fig.show()

import numpy as np
age = [] 
savings = [] 
for data in savings_data: 
  if float(data[5]) != 0: 
    age.append(float(data[5])) 
    savings.append(float(data[0])) 
correlation = np.corrcoef(age, savings) 
    
print(f"Correlation between the age of the person and their savings is - {correlation[0,1]}")